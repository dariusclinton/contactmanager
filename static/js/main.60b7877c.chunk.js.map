{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/ShowContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","trim","newContact","post","history","push","target","ShowContact","parseInt","match","params","Header","branding","defaultProps","About","NotFound","Test","title","body","fetch","then","response","json","console","log","user","EditContact","updContact","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60b7877c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? action.payload : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: true\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ float: \"right\", color: \"red\", cursor: \"pointer\" }}\n                ></i>\n                <Link to={\"/contact/show/\" + id} className=\"float-right\">\n                  <i\n                    className=\"fas fa-eye\"\n                    style={{\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n                <Link to={\"/contact/edit/\" + id} className=\"float-right\">\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : (\n                \"\"\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nfunction TextInputGroup({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name.trim() === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email.trim() === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone.trim() === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div>\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">Add Contact</div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Enter Name...\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n\n                    <TextInputGroup\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter Email...\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n\n                    <TextInputGroup\n                      label=\"Phone\"\n                      name=\"phone\"\n                      type=\"text\"\n                      placeholder=\"Enter Phone...\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <input\n                      type=\"submit\"\n                      value=\"Add Contact\"\n                      className=\"btn btn-light btn-block\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n\nclass ShowContact extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const [contact] = value.contacts.filter(\n            contact => contact.id === parseInt(this.props.match.params.id)\n          );\n\n          return (\n            <div>\n              {contact ? (\n                <div>\n                  <h3 className=\"display-4\">{contact.name}</h3>\n                  <p>{contact.email}</p>\n                  <p>{contact.phone}</p>\n                </div>\n              ) : (\n                <h4 className=\" text-center display-4\">Contact not found</h4>\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default ShowContact;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            {branding}\n          </Link>\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  <i className=\"fas fa-home\"></i> Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/contact/add\" className=\"nav-link\">\n                  <i className=\"fas fa-plus\"></i> Add\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                  <i className=\"fas fa-info\"></i> About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">A simple app for manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"text-center\">\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page not found\n      </h1>\n      <p className=\"lead\">Sorry, this page does not exist!</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(data => this.setState({ body: data }));\n  }\n\n  // UNSAFE_componentWillMount() {\n  //   console.log(\"componentWillMount...\");\n  // }\n\n  // componentDidUpdate() {\n  //   console.log(\"componentDidUpdate...\");\n  // }\n\n  // UNSAFE_componentWillUpdate() {\n  //   console.log(\"componentWillUpdate...\");\n  // }\n\n  // static getDerivedStateFromProps(props, state) {\n  //   return null;\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {}\n\n  render() {\n    const { body } = this.state;\n\n    console.log(body);\n\n    return (\n      <div>\n        <h1 className=\"display-4 text-center\">Test Component</h1>\n        <ul className=\"list-group\">\n          {body &&\n            body.map(user => (\n              <li key={user.id} className=\"list-group-item\">\n                {user.name}\n              </li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name.trim() === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email.trim() === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone.trim() === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div>\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">Edit Contact</div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Enter Name...\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n\n                    <TextInputGroup\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter Email...\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n\n                    <TextInputGroup\n                      label=\"Phone\"\n                      name=\"phone\"\n                      type=\"text\"\n                      placeholder=\"Enter Phone...\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <input\n                      type=\"submit\"\n                      value=\"Edit Contact\"\n                      className=\"btn btn-light btn-block\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport ShowContact from \"./components/contacts/ShowContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Provider>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/show/:id\" component={ShowContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}